name: Promotion

on:
  workflow_dispatch:
    inputs:
      app_version:
        description: 'Application version to promote (SemVer). If empty, use latest.'
        required: false
        default: ''
        type: string
      target_env:
        description: 'Target environment'
        required: true
        default: 'DEV'
        type: choice
        options: ['DEV', 'QA', 'STAGING', 'PROD']
      reason:
        description: 'Reason/notes for promotion'
        required: false
        default: 'Demo promotion'
        type: string

jobs:
  promote:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup JFrog CLI (OIDC)
        uses: jfrog/setup-jfrog-cli@v4
        env:
          JF_URL: ${{ vars.JFROG_URL }}
          JF_PROJECT: ${{ vars.PROJECT_KEY }}
          JFROG_CLI_BUILD_NAME: ${{ github.event.repository.name }}_${{ github.workflow }}_${{ github.job }}
          JFROG_CLI_BUILD_NUMBER: ${{ github.run_number }}-${{ github.run_attempt }}
        with:
          version: latest
          oidc-provider-name: bookverse-checkout-github
          disable-job-summary: false
          disable-auto-build-publish: true
          disable-auto-evidence-collection: false
          oidc-audience: ${{ vars.JFROG_URL }}

      - name: Export common env
        env:
          INPUT_APP_VERSION: ${{ inputs.app_version }}
          INPUT_TARGET_ENV: ${{ inputs.target_env }}
          INPUT_REASON: ${{ inputs.reason }}
        run: |
          SERVICE_NAME="$(echo "${{ github.event.repository.name }}" | sed 's/bookverse-//')"
          APPLICATION_KEY="bookverse-$SERVICE_NAME"
          TARGET_ENV="${INPUT_TARGET_ENV:-DEV}"
          REGISTRY_URL="${{ vars.DOCKER_REGISTRY }}"
          DOCKER_REPO="${{ vars.PROJECT_KEY }}-${SERVICE_NAME}-docker-internal-local"
          GENERIC_REPO="${{ vars.PROJECT_KEY }}-generic-internal-local"
          BUILD_NAME="${{ github.event.repository.name }}_${{ github.workflow }}_${{ github.job }}"
          BUILD_NUMBER="${{ github.run_number }}-${{ github.run_attempt }}"
          echo "SERVICE_NAME=$SERVICE_NAME" >> $GITHUB_ENV
          echo "APPLICATION_KEY=$APPLICATION_KEY" >> $GITHUB_ENV
          echo "TARGET_ENV=$TARGET_ENV" >> $GITHUB_ENV
          echo "REGISTRY_URL=$REGISTRY_URL" >> $GITHUB_ENV
          echo "DOCKER_REPO=$DOCKER_REPO" >> $GITHUB_ENV
          echo "GENERIC_REPO=$GENERIC_REPO" >> $GITHUB_ENV
          echo "BUILD_NAME=$BUILD_NAME" >> $GITHUB_ENV
          echo "BUILD_NUMBER=$BUILD_NUMBER" >> $GITHUB_ENV
          echo "PROMOTION_REASON=${INPUT_REASON:-}" >> $GITHUB_ENV
          echo "INPUT_APP_VERSION_VAL=${INPUT_APP_VERSION:-}" >> $GITHUB_ENV

      - name: Resolve application version (SemVer)
        run: |
          if [ -n "${INPUT_APP_VERSION_VAL}" ]; then
            APP_VERSION="${INPUT_APP_VERSION_VAL}"
          else
            RESP_FILE=$(mktemp)
            HTTP_STATUS=$(curl -sS -L -o "$RESP_FILE" -w "%{http_code}" \
              "${{ vars.JFROG_URL }}/apptrust/api/v1/applications/$APPLICATION_KEY/versions/?limit=1" \
              -H "Authorization: Bearer ${{ secrets.JFROG_ADMIN_TOKEN }}" \
              -H "Accept: application/json")
            if [ "$HTTP_STATUS" -ge 200 ] && [ "$HTTP_STATUS" -lt 300 ]; then
              APP_VERSION=$(jq -r '.versions[0].version // empty' "$RESP_FILE")
            fi
            rm -f "$RESP_FILE"
            if [ -z "$APP_VERSION" ] || [ "$APP_VERSION" = "null" ]; then
              echo "Failed to resolve application version" >&2
              exit 1
            fi
          fi
          echo "APP_VERSION=$APP_VERSION" >> $GITHUB_ENV
          echo "IMAGE_TAG=$APP_VERSION" >> $GITHUB_ENV

      - name: Promote application version
        run: |
          echo "Promoting $APPLICATION_KEY@$APP_VERSION to $TARGET_ENV"
          curl -sS -L -X POST \
            "${{ vars.JFROG_URL }}/apptrust/api/v1/applications/$APPLICATION_KEY/versions/$APP_VERSION/promote?to=$TARGET_ENV" \
            -H "Authorization: Bearer ${{ secrets.JFROG_ADMIN_TOKEN }}" \
            -H "Accept: application/json" --fail
          echo "✅ Promotion completed"

      - name: Attach promotion evidence
        env:
          EVIDENCE_PRIVATE_KEY: ${{ secrets.EVIDENCE_PRIVATE_KEY }}
        run: |
          NOW_TS=$(date -u +%Y-%m-%dT%H:%M:%SZ)
          cat > promotion-evidence.json <<JSON
          {
            "promotion": {
              "to": "$TARGET_ENV",
              "version": "$APP_VERSION",
              "reason": "${PROMOTION_REASON}",
              "actor": "${{ github.actor }}",
              "timestamp": "${NOW_TS}"
            }
          }
          JSON
          cat > promotion-evidence.md <<EOF
          # Promotion Evidence

          - Application: \
            \`$APPLICATION_KEY\`
          - Version: \
            \`$APP_VERSION\`
          - Target Environment: \
            \`$TARGET_ENV\`
          - Actor: \
            \`${{ github.actor }}\`
          - Timestamp (UTC): \
            \`${NOW_TS}\`
          - Reason: \
            \`${PROMOTION_REASON:-N/A}\`
          EOF
          jf evd create-evidence \
            --predicate promotion-evidence.json \
            --markdown promotion-evidence.md \
            --predicate-type "https://jfrog.com/evidence/promotion/v1" \
            --release-bundle "$APPLICATION_KEY" \
            --release-bundle-version "$APP_VERSION" \
            --project "${{ vars.PROJECT_KEY }}" \
            --key "${{ secrets.EVIDENCE_PRIVATE_KEY }}" || echo "⚠️ Promotion evidence attach failed"

      - name: Promotion summary
        run: |
          echo "## 🚀 Promotion Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Application:** \`$APPLICATION_KEY\`" >> $GITHUB_STEP_SUMMARY
          echo "**Version:** \`$APP_VERSION\`" >> $GITHUB_STEP_SUMMARY
          echo "**Environment:** \`$TARGET_ENV\`" >> $GITHUB_STEP_SUMMARY
          echo "**Docker Repo:** \`$DOCKER_REPO\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🛡️ Evidence" >> $GITHUB_STEP_SUMMARY
          echo "- Promotion evidence attached" >> $GITHUB_STEP_SUMMARY


